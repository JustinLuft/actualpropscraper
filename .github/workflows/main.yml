# .github/workflows/scraper.yml
name: Web Scraper

on:
  schedule:
    # Run daily at 6 AM UTC
    - cron: '0 6 * * *'
  workflow_dispatch:  # Allow manual triggering
    inputs:
      websites:
        description: 'Comma-separated list of websites to scrape'
        required: false
        default: 'alphacapitalgroup.uk'
      headless:
        description: 'Run in headless mode'
        required: false
        default: 'true'
        type: choice
        options:
          - 'true'
          - 'false'

jobs:
  scrape:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Install Chrome and ChromeDriver
      run: |
        # Install Chrome browser
        wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
        sudo apt update
        sudo apt install -y google-chrome-stable
        
        # Install ChromeDriver using the new Chrome for Testing API
        CHROME_VERSION=$(google-chrome --version | cut -d ' ' -f3)
        echo "Chrome version: $CHROME_VERSION"
        
        # Get the latest stable ChromeDriver version
        CHROMEDRIVER_VERSION=$(curl -s "https://googlechromelabs.github.io/chrome-for-testing/LATEST_RELEASE_STABLE")
        echo "ChromeDriver version: $CHROMEDRIVER_VERSION"
        
        # Download and install ChromeDriver
        wget -O /tmp/chromedriver-linux64.zip "https://storage.googleapis.com/chrome-for-testing-public/${CHROMEDRIVER_VERSION}/linux64/chromedriver-linux64.zip"
        sudo unzip /tmp/chromedriver-linux64.zip -d /tmp/
        sudo mv /tmp/chromedriver-linux64/chromedriver /usr/local/bin/
        sudo chmod +x /usr/local/bin/chromedriver
        
        # Verify installation
        chromedriver --version
        google-chrome --version
        
    - name: Set environment variables
      run: |
        echo "WEBSITES=${{ github.event.inputs.websites || 'alphacapitalgroup.uk' }}" >> $GITHUB_ENV
        echo "HEADLESS=${{ github.event.inputs.headless || 'true' }}" >> $GITHUB_ENV
        echo "OUTPUT_DIR=output" >> $GITHUB_ENV
        echo "TIMEOUT=30" >> $GITHUB_ENV
        
    - name: Create output directory
      run: mkdir -p output
      
    - name: Run scraper
      run: python main.py
      
    - name: Upload results as artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: scraping-results-${{ github.run_number }}
        path: |
          output/*.csv
          scraper.log
        retention-days: 30
        
    - name: Commit and push results (optional)
      if: success()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add output/*.csv
        if git diff --staged --exit-code; then
          echo "No changes to commit"
        else
          git commit -m "Update scraping results - $(date)"
          git push
        fi
